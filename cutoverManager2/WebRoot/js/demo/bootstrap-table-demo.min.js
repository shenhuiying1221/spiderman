 $("#btn_edit").click(function () {
        var i = 0;
        var id;
        $("input[name='btSelectItem']:checked").each(function () {
            i++;
            id = $(this).parents("tr").attr("data-uniqueid");
        })
        if (i > 1) {
            alert("编辑只支持单一操作")
        } else {
            if (i != 0) {
            	var  majorName;
            	majorName= $(this).parents("tr");
            	var index = $(this).parent().parent().index();
            	alert("获取选中的专业为" + index);
            	 var datas={};
            datas["orderNumbe"]=$(this).parents("tr").children("#orderNumbe").children('input').val();
            datas["major"]=$(this).parents("tr").children("#major").children('input').val();
            var numb;
            numb=document.getElementById("exampleTableEvents").rows[0].cells[0];
            alert("获取选中的专业为" + numb);
              $.ajax({
                type : "post",
                 url :"js/demo/bootstrap_table_test.json",
                 data :datas,
                 dataType : "json",
                 success : function(res) {
                     if(res=="success")
                         alert("修改成功");
               }
        });
//              alert("获取选中的id为" + id);
//              window.location.href = "/index/index";
            } else {
                alert("请选中要编辑的数据");
            }

        }
  })

//============================
function cellStyle(e, t, o) {
    var n = ["active", "success", "info", "warning", "danger"];
    return o % 2 === 0 && o / 2 < n.length ? {
        classes: n[o / 2]
    } : {}
}

function rowStyle(e, t) {
    var o = ["active", "success", "info", "warning", "danger"];
    return t % 2 === 0 && t / 2 < o.length ? {
        classes: o[t / 2]
    } : {}
}

function scoreSorter(e, t) {
    return e > t ? 1 : t > e ? -1 : 0
}

function nameFormatter(e) {
    return e + '<i class="icon wb-book" aria-hidden="true"></i> '
}

function starsFormatter(e) {
    return '<i class="icon wb-star" aria-hidden="true"></i> ' + e
}

function queryParams() {
    return {
        type: "owner",
        sort: "updated",
        direction: "desc",
        per_page: 100,
        page: 1
    }
}

function buildTable(e, t, o) {
    var n, l, s, a = [],
        c = [];
    for (n = 0; t > n; n++) a.push({
        field: "字段" + n,
        title: "单元" + n
    });
    for (n = 0; o > n; n++) {
        for (s = {}, l = 0; t > l; l++) s["字段" + l] = "Row-" + n + "-" + l;
        c.push(s)
    }
    e.bootstrapTable("destroy").bootstrapTable({
        columns: a,
        data: c,
        iconSize: "outline",
        icons: {
            columns: "glyphicon-list"
        }
    })
}
! function (e, t, o) {
    "use strict";
    ! function () {
        var e = [{
            Tid: "1",
            First: "奔波儿灞",
            sex: "男",
            Score: "50"
        }, {
            Tid: "2",
            First: "灞波儿奔",
            sex: "男",
            Score: "94"
        }, {
            Tid: "3",
            First: "作家崔成浩",
            sex: "男",
            Score: "80"
        }, {
            Tid: "4",
            First: "韩寒",
            sex: "男",
            Score: "67"
        }, {
            Tid: "5",
            First: "郭敬明",
            sex: "男",
            Score: "100"
        }, {
            Tid: "6",
            First: "马云",
            sex: "男",
            Score: "77"
        }, {
            Tid: "7",
            First: "范爷",
            sex: "女",
            Score: "87"
        }];
        o("#exampleTableFromData").bootstrapTable({
            data: e,
            height: "250"
        })
    }(),
    function () {
        o("#exampleTableColumns").bootstrapTable({
        	    
            url: "js/demo/allData.json",
            columns:[{
               	field:"cutoverState",
               	title:"状态",
               }],

        })
    }(), buildTable(o("#exampleTableLargeColumns"), 50, 50),
        function () {
            o("#exampleTableToolbar").bootstrapTable({
                url: "js/demo/bootstrap_table_test.json",
                search: !0,
                showRefresh: !0,
                showToggle: !0,
                showColumns: !0,
                toolbar: "#exampleToolbar",
                pageSize: 100,
                iconSize: "outline",
                icons: {
                    refresh: "glyphicon-repeat",
                    toggle: "glyphicon-list-alt",
                    columns: "glyphicon-list"
                }
            })
        }(),
        function () {
            o("#exampleTableEvents").bootstrapTable({
                url: "/cutoverManager2/mainPageAction_getMainPageResultData",
                responseHandler: function(res) {
                return {
                    "total": res.total,//总页数
                    "rows": res.cutoverOrderList,   //数据
                };
                },
                sidePagination:"server",  //从服务器获取
                search: !0,
                pagination: !0,
                showRefresh: !0,
                showToggle: !0,
                showColumns: !0,
                pageSize: 100,
                sortable: true,
                sortOrder: "asc",
                iconSize: "outline",
                uniqueId: 'orderNumber',
                //-------当前列的名称、当前行数据对象、更新前的值、编辑的当前单元格的jQuery对象。
                onEditableSave: function (field, row, oldValue, $el) {
                $.ajax({
                    type: "post",
                    url: "js/demo/bootstrap_table_test.json",
                    data: { strJson: JSON.stringify(row) },
                    success: function (data, status) {
                        if (status == "success") {
                            alert("编辑成功");
                        }
                    },
                    error: function () {
                        alert("Error");
                    },
                    complete: function () {

                    }

                });
                },
                editable: 0,
                columns:[{
               	checkbox:true
               },{
               	field:"cutoverState",
               	title:"状态",
               	sortable:true,
               	align:'center',
               	formatter:function(value,row,index){
               		if(value=="已完成"){
               			return['<span class="label label-success label-rouded">已完成</span>']
               		}
               		else if(value == "正在进行"){
               			return['<span class="label label-info label-rouded">进行中</span>']
               		}
               		else if(value == "割接超时"){
               			return['<span class="label label-warning label-rouded">已超时</span>']
               		}
               		else if(value == "割接取消"){
               			return['<span class="label label-default label-rouded">已取消</span>']
               		}else if(value == "割接失败"){
               			return['<span class="label label-danger label-rouded">割接失败</span>']
               		}else{
               			return['<span class="label label-primary  label-rouded">即将开始</span>']
               		} 		
               	 }
               },
               {
               	field:"orderNumber",
               	title:"工单号",
               	align:'center'
               },{
               	field:"major",
               	title:"专业",
               	align:'center',
//             	sortable:true,
               	editable: {
                    type: 'select',
                    title: '专业',
                    source:[{value:"1",text:"全业务"},{value:"2",text:"核心网"},{value:"3",text:"无线"},{value:"4",text:"动力设备"},{value:"5",text:"传输网"},{value:"6",text:"其他"}]
                    }
 
               },{
               	field:"subject",
               	title:"工单主题",
               	align:'center'
               },{
               	field:"city",
               	title:"地市",
               	sortable:true,
               	align:'center',  	
               },
               {
               	field:"grade",
               	title:"级别",
               	sortable:true,
                align:"center",
               },
               {
               	field:"applyStartTime",
               	title:"开始时间",
               	align:'center'
               },
               {
               	field:"applyEndTime",
               	title:"截止时间",
               	align:'center'
               },
//             {
//             	field:"cooperatorName",
//             	title:"联系人"
//             },
               {
               	field:"cooperatorPhone",
               	title:"联系电话",
               	align:'center',
               	visible: false ,   //false表示不显示
               },
                {
               	field:"affectNetworkElement",
               	title:"网元信息",
               	align:'center',
               	
               },
               {
               	field:"Desc",
               	title:"操作",
               	formatter:operateFormatter,
               	align:'center'
               }
               
               ],
                toolbar: "#exampleTableEventsToolbar",
                icons: {
                    refresh: "glyphicon-repeat",
                    toggle: "glyphicon-list-alt",
                    columns: "glyphicon-list"
                },
                
 
                
            });
            
            //操作部分按钮
            function operateFormatter(value,row,index){
            	return[
       '<button class="btn btn-info btn-sm rightSize detailBtn" type="button"><i class="fa fa-paste"></i> 确认</button>',
       '<button class="btn btn-danger btn-sm rightSize packageBtn" type="button"><i class="fa fa-envelope"></i>查询</button>'
    ].join('');
            }
            var e = o("#examplebtTableEventsResult");
            o("#exampleTableEvents").on("all.bs.table", function (e, t, o) {
                console.log("Event:", t, ", data:", o)
            }).on("click-row.bs.table", function () {
                e.text("Event: click-row.bs.table")
            }).on("dbl-click-row.bs.table", function () {
                e.text("Event: dbl-click-row.bs.table")
            }).on("sort.bs.table", function () {
                e.text("Event: sort.bs.table")
            }).on("check.bs.table", function () {
                e.text("Event: check.bs.table")
            }).on("uncheck.bs.table", function () {
                e.text("Event: uncheck.bs.table")
            }).on("check-all.bs.table", function () {
                e.text("Event: check-all.bs.table")
            }).on("uncheck-all.bs.table", function () {
                e.text("Event: uncheck-all.bs.table")
            }).on("load-success.bs.table", function () {
                e.text("Event: load-success.bs.table")
            }).on("load-error.bs.table", function () {
                e.text("Event: load-error.bs.table")
            }).on("column-switch.bs.table", function () {
                e.text("Event: column-switch.bs.table")
            }).on("page-change.bs.table", function () {
                e.text("Event: page-change.bs.table")
            }).on("search.bs.table", function () {
                e.text("Event: search.bs.table")
            })
        }()
}(document, window, jQuery);